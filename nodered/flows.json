[
    {
        "id": "3c84a4f.8127a5c",
        "type": "tab",
        "label": "Flow 1"
    },
    {
        "id": "f60ee569.074248",
        "type": "tab",
        "label": "Flow 2"
    },
    {
        "id": "e68b93f.4149d7",
        "type": "subflow",
        "name": "Create Dataset Entry",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "725427c8.e39378",
        "type": "http request",
        "z": "e68b93f.4149d7",
        "name": "Get associated proposal",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 210,
        "y": 220,
        "wires": [
            [
                "6e363ed9.99947"
            ]
        ]
    },
    {
        "id": "e12c7d5e.d979f",
        "type": "function",
        "z": "e68b93f.4149d7",
        "name": "Build raw dataset",
        "func": "// TODO take instrument from definiton provided earlier\nvar instrumentId=\"/PSI/SLS/cSAXS\";\nvar metaData=msg.inputFromBeamline.hdfMetaData;\nrd={};\n\n// check which information is available\n\n// Get contact details from proposal or eaccount\n\nconsole.log(\"Message payload:\",msg.payload);\n\nif (msg.findByInstrumentAndDate) {\n   proposal=msg.findByInstrumentAndDate\n   rd.ownerEmail=proposal.pi_email;\n   rd.owner = proposal.pi_firstname + ' ' + proposal.pi_lastname;\n   rd.contactEmail=proposal.email;\n   rd.principalInvestigator = proposal.pi_email;\n   rd.proposalId = proposal.proposalId;\n} else {\n   rd.ownerEmail=msg.payload.mail;\n   rd.owner=msg.payload.sn;\n   rd.contactEmail=msg.payload.mail;\n   rd.principalInvestigator = msg.payload.mail\n   rd.proposalId=\"unknown\";\n}\n\n// Assume that all tiems are already UTC\nif('entry' in metaData){\n   rd.creationTime=metaData.entry.start_time;\n   if(metaData.entry.end_time !='???'){\n       rd.endTime=metaData.entry.end_time;\n   } \n   rd.description=\"Title:\"+metaData.entry.title + \" Attributes:\"+JSON.stringify(metaData.attrs);\n   rd.dataFormat = metaData.entry.definition+' Nexus version:'+metaData.attrs.NeXus_version;\n}  else {\n   rd.creationTime= msg.inputFromBeamline.createDate;\n   console.log('no entry field:',rd.creationTime);\n   rd.description=\" Attributes:\"+JSON.stringify(metaData.attrs);\n   rd.dataFormat = ' Nexus version:'+metaData.attrs.NeXus_version;\n}\n\nrd.sourceFolder=msg.inputFromBeamline.sourceFile;\nrd.orcidOfOwner = 'unknown';\n// TODO when should this be defined ? At ARchive time ?\n// If directly then it should be possible to change the settings from the GUI\n// i.e. to update the rawDataset entry\nrd.classification = 'AV=medium,CO=low';\nrd.license = 'CC BY-SA 4.0';\nrd.type = 'raw';\nrd.ownerGroup=msg.inputFromBeamline.gid;\nrd.doi=\"not yet defined\";\nrd.isPublished=false;\nrd.creationLocation = instrumentId;\nrd.size=msg.inputFromBeamline.size;\nrd.scientificMetadata=metaData;\n\nmsg.payload=rd;\nmsg.headers={\"content-type\": \"application/json; charset=utf-8\"};\nmsg.method='POST';\nmsg.url=global.get('api')+'/RawDatasets?access_token='+msg.token;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 500,
        "wires": [
            [
                "ed7c38fc.1adb98"
            ]
        ]
    },
    {
        "id": "ed7c38fc.1adb98",
        "type": "http request",
        "z": "e68b93f.4149d7",
        "name": "Store rawdataset in catalog",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 440,
        "y": 620,
        "wires": [
            [
                "fa28450b.dcf458"
            ]
        ]
    },
    {
        "id": "b7f100f.53286",
        "type": "switch",
        "z": "e68b93f.4149d7",
        "name": "Statuscode 200 ?",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 444,
        "y": 725,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1276fde9.d8d532",
        "type": "switch",
        "z": "e68b93f.4149d7",
        "name": "proposal found ?",
        "property": "payload.findByInstrumentAndDate",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "{}",
                "vt": "jsonata"
            },
            {
                "t": "neq",
                "v": "{}",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "e12c7d5e.d979f"
            ],
            []
        ]
    },
    {
        "id": "fa28450b.dcf458",
        "type": "change",
        "z": "e68b93f.4149d7",
        "name": "Save Dataset ID",
        "rules": [
            {
                "t": "set",
                "p": "pid",
                "pt": "msg",
                "to": "payload.pid",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 206,
        "y": 706,
        "wires": [
            [
                "b7f100f.53286"
            ]
        ]
    },
    {
        "id": "73f6617c.db23d",
        "type": "inject",
        "z": "3c84a4f.8127a5c",
        "name": "Regular update trigger",
        "topic": "",
        "payload": "\"\"",
        "payloadType": "str",
        "repeat": "360000",
        "crontab": "",
        "once": true,
        "x": 210,
        "y": 80,
        "wires": [
            [
                "6fd72dd0.0a6294"
            ]
        ]
    },
    {
        "id": "fb9c145a.fc9428",
        "type": "http request",
        "z": "3c84a4f.8127a5c",
        "name": "Get token",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 504,
        "y": 193,
        "wires": [
            [
                "875fb826.a23758",
                "85ea62db.3f1c4"
            ]
        ]
    },
    {
        "id": "6fd72dd0.0a6294",
        "type": "function",
        "z": "3c84a4f.8127a5c",
        "name": "Prepare retrieval of access token",
        "func": "// prepare API server calls\nglobal.set('api','http://10.4.0.49:3001/api/v3');\n\nmsg.headers={\"content-type\": \"application/json\", \"Accept\": \"application/json\"};\nmsg.payload={\"username\":\"ingestor\",\"password\":\"aman\"};\nmsg.method='POST';\nmsg.url=global.get('api')+'/Users/login';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 295,
        "y": 150,
        "wires": [
            [
                "fb9c145a.fc9428"
            ]
        ]
    },
    {
        "id": "875fb826.a23758",
        "type": "function",
        "z": "3c84a4f.8127a5c",
        "name": "Store as global variable",
        "func": "global.set(\"accessToken\",msg.payload.id);\nnode.log(\"Updated access token\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "85ea62db.3f1c4",
        "type": "debug",
        "z": "3c84a4f.8127a5c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 685,
        "y": 227,
        "wires": []
    },
    {
        "id": "6e363ed9.99947",
        "type": "function",
        "z": "e68b93f.4149d7",
        "name": "Store result",
        "func": "msg.findByInstrumentAndDate=msg.payload.findByInstrumentAndDate;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 306,
        "y": 260,
        "wires": [
            [
                "1276fde9.d8d532"
            ]
        ]
    },
    {
        "id": "323075b4.a6880a",
        "type": "catch",
        "z": "f60ee569.074248",
        "name": "",
        "scope": null,
        "x": 131,
        "y": 374,
        "wires": [
            [
                "eafdadb8.97829"
            ]
        ]
    },
    {
        "id": "944f0b90.fe8ed8",
        "type": "subflow:e68b93f.4149d7",
        "z": "f60ee569.074248",
        "name": "",
        "x": 369,
        "y": 120,
        "wires": []
    },
    {
        "id": "eafdadb8.97829",
        "type": "function",
        "z": "f60ee569.074248",
        "name": "Log exception",
        "func": "// console.dir(msg.amqpMessage);\nconsole.dir(msg.error);\n// console.dir(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 294,
        "y": 405,
        "wires": [
            [
                "1c9109cd.8fad56"
            ]
        ]
    },
    {
        "id": "103ac622.87361a",
        "type": "debug",
        "z": "f60ee569.074248",
        "name": "Input data",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 297,
        "y": 39,
        "wires": []
    },
    {
        "id": "1c9109cd.8fad56",
        "type": "debug",
        "z": "f60ee569.074248",
        "name": "Exception data",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 493,
        "y": 403,
        "wires": []
    },
    {
        "id": "10806039.46d2a",
        "type": "debug",
        "z": "f60ee569.074248",
        "name": "Final output",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 530,
        "y": 260,
        "wires": []
    }
]
